--@name MMRKVityazRK1m-717
--@author 
--@sharedscreen
--@include Lib/ScrLib
--@include Lib/RTable
hook = loadLibrary "hook"
timer = loadLibrary "timer"
net = loadLibrary "net"
local snd = loadLibrary "sounds"
local ME = loadLibrary("ents").self()

local function toChar(test)
    if test and 32 <= test and test <= 126 and test ~= 35 then
        return string.upper(string.char(test))
    end
    return ""
end


local function tonumberb(Bool)
    return Bool and 1 or 0    
end

local function tostringb(Bool)
    return tostring(tonumberb(Bool))
end



if SERVER then 
    R = require "Lib/RTable"
    wire = loadLibrary("wire")
    wire.adjustInputs({"Train"},{"wirelink"})
    wire.adjustOutputs({"Test"},{"string"})
    local Pogreshnost={[0]=0}
    local data = R{
        Initialized = false,
        Connected = false,
        WagNum = 0,
        Hod = false,
        Tormoz = false,
        V = 0,
        Vcur = 0,
        Vnext = 0,
        ARS = 0,
        
        BVol = 0.0,
        KRVol = 0.0,
        TM = 0.0, 
        NM = 0.0,
        
        Doors = "0",
        BV = "0",
        Sbor = "0",
        PT = "0",
        VZ1 = "0",
        VZ2 = "0",
        KR = "0",
        PSN = "0",
        RK = "0",
        NeisprTP = "0",
        BattVkl = "0",
        TC = "0"
    }
    
    data(function(key,old,new)
        --print("Changed "..key.." from "..tostring(old).." -> "..tostring(new))
        --print(data.BVol,data.KRVol)
        if key == "WagNum" then
            for i=1,data.WagNum do
                Pogreshnost[i] = math.random(-5,5)*0.01
            end
        end
        if net.canSend() then 
            net.start("MMV")
                net.writeBit(data.Connected)
                net.writeInt(data.WagNum,8)
                net.writeBit(data.Hod)
                net.writeBit(data.Tormoz)
                net.writeInt(data.V,8)
                net.writeInt(data.Vcur,8)
                net.writeInt(data.Vnext,8)
                net.writeInt(data.ARS,4)
                
                net.writeFloat(data.BVol)
                net.writeFloat(data.KRVol)
                net.writeInt(data.TM,16)
                net.writeInt(data.NM,16)
                
                net.writeString(data.Doors)
                net.writeString(data.BV)
                net.writeString(data.Sbor)
                net.writeString(data.PT)
                net.writeString(data.VZ1)
                net.writeString(data.VZ2)
                net.writeString(data.KR)
                net.writeString(data.PSN)
                net.writeString(data.RK)
                net.writeString(data.NeisprTP)
                net.writeString(data.BattVkl)
                net.writeString(data.TC)
            net.send()
            --print(data.TM.."/"..data.TC.."/"..data.NM)
        end
    end)
    
    function getMMInputs()
        if not wire.ports.Train then data.Connected = false return else data.Connected=true end
        local MM = wire.ports.Train
        data.WagNum = MM[65535]
        
        data.Hod = MM[1]>0
        data.Tormoz = MM[6]>0
        
        data.V = MM[376]
        
        local CSP = MM[384]
        data.Vcur = CSP>70 and 8 or 
            (CSP>60 and 7 or
            (CSP>40 and 6 or 
            (CSP>0 and 4 or
            (MM[381]~=0 and 0 or 2))))
            
        local NSP = MM[385]
        data.Vnext = NSP>70 and 8 or 
            (NSP>60 and 7 or
            (NSP>40 and 6 or 
            (NSP>0 and 4 or 2)))
        data.ARS = MM[391]>0 and (MM[21]>0 and 2 or 1) or 0
        data.BVol = MM[419]
        data.KRVol = MM[470]
        data.TM = math.round(MM[670]*100)
        data.NM = math.round(MM[674]*100)
        
        local Doors = ""
        local BV = ""
        local Sbor = ""
        local PT = ""
        local VZ1 = ""
        local VZ2 = ""
        local KR = ""
        local PSN = ""
        local RK = ""
        local NeisprTP = ""
        local BattVkl = ""
        local TC = ""
        
        for i=1,data.WagNum do
            WagMul=(i-1)*65536
            Doors = Doors..tostringb(MM[WagMul+713]>0)
            BV = BV..tostringb(MM[WagMul+758]==0)
            Sbor = Sbor..tostringb(MM[WagMul+609]>0)
            PT = PT..Sbor..tostringb(MM[WagMul+671]>0.2)
            VZ1 = VZ1..tostringb(MM[WagMul+680]>0)
            VZ2 = VZ2..tostringb(MM[WagMul+685]>0)
            KR = KR..tostringb(MM[WagMul+614]>0)
            PSN = PSN..tostringb(MM[WagMul+701]>0)
            RK = RK..tostringb(MM[WagMul+855]~=0 and MM[WagMul+854]>0)

            NeisprTP = NeisprTP..tostringb((((MM[WagMul+1]>0 or MM[WagMul+6]>0) and MM[WagMul+609]==0)) or MM[WagMul+758]>0)
            BattVkl = BattVkl..tostringb(MM[WagMul+912]>0)
            TC = TC..string.format("%003d",((MM[WagMul+671])+Pogreshnost[i])*100)..":"
        end
        
        data.Doors = Doors
        data.BV = BV
        data.Sbor = Sbor
        data.PT = PT
        data.VZ1 = VZ1
        data.VZ2 = VZ2
        data.KR = KR
        data.PSN = PSN
        data.RK = RK
        data.NeisprTP = NeisprTP
        data.BattVkl = BattVkl
        data.TC = TC
        wire.ports.Test = data.TC
    end
    
    timer.create("MMGet",0.1,0,getMMInputs)
    timer.simple(0.01,
        function()
            data.Initialized = true
            getMMInputs()
        end
    )
        
elseif CLIENT then  
    local ScrLib = require "Lib/ScrLib"
    local clear = ScrLib.clear
    local drawLine = ScrLib.drawLine
    local drawBox = ScrLib.drawRect
    local drawTextBox = ScrLib.drawRectText
    local drawBoxOutline = ScrLib.drawRectOL
    local drawText = ScrLib.drawText
    local poly = ScrLib.poly
    local circle = ScrLib.circle
    local drawCircle = ScrLib.drawCircle
    local drawPoly = ScrLib.drawPoly
    local drawPolyOutline = ScrLib.drawPolyOL
    local createFont = ScrLib.createFont
    
	
    local MM = {
        Initialized = false,
        Connected = false,
        WagNum = 0,
        Hod = false,
        Tormoz = false,
        V = 0,
        Vcur = 0,
        Vnext = 0,
        ARS = 0,
        
        BVol = 0.0,
        KRVol = 0.0,
        TM = 0.0, 
        NM = 0.0,
        
        Doors = "0",
        BV = "0",
        Sbor = "0",
        PT = "0",
        VZ1 = "0",
        VZ2 = "0",
        KR = "0",
        PSN = "0",
        RK = "0",
        NeisprTP = "0",
        BattVkl = "0",
        TC = "0",
        
        TCmin = 0.0,
        TCmax = 0.0,
        TCw = 0.0,
        TCt={},
        
        Rezhim = "ДАУ АРС",
    }
    
    local Rezhim = {"ХОД","ВЫБЕГ","ТОРМОЗ"}
    
    local isDraw=false

    local White = Color(255,255,255,255)
    local Black = Color(0,0,0,255)
    local Red = Color(255,0,0,255)
    local Alpha=255
    
    local Arial = {}
    
    Arial[23]=createFont("Arial",23,200)
    Arial[26]=createFont("Arial",26,200)
    Arial[35]=createFont("Arial",35,200)
    
    function requreDraw()
        isDraw=false
    end
    
    function getMMNetData(Typ)
        if Typ==0 then
            MM.Connected = net.readBit()
            if not MM.Connected then return end
            MM.WagNum = net.readInt(8)
            MM.Hod = net.readBit()>0
            MM.Tormoz = net.readBit()>0
            MM.V = net.readInt(8)
            MM.Vcur = net.readInt(8)
            MM.Vnext = net.readInt(8)
            MM.ARS = net.readInt(4)
            
            MM.BVol = net.readFloat()
            MM.KRVol = net.readFloat()
            MM.TM = net.readInt(16)/100
            MM.NM = net.readInt(16)/100
            
            MM.Doors = net.readString()
            MM.BV = net.readString()
            MM.Sbor = net.readString()
            MM.PT = net.readString()
            MM.VZ1 = net.readString()
            MM.VZ2 = net.readString()
            MM.KR = net.readString()
            MM.PSN = net.readString()
            MM.RK = net.readString()
            MM.NeisprTP = net.readString()
            MM.BattVkl = net.readString()
            MM.TC = net.readString()
            
            MM.TCt = string.explode(MM.TC,":")
            if MM.WagNum~=#MM.TCt-1 then return end
            MM.TCmin = (tonumber(MM.TCt[2]) or 0)/100
            MM.TCmax=0
            for i=1,MM.WagNum do
                MM.TCmin = math.min(MM.TCmin,tonumber(MM.TCt[i])/100)
                MM.TCmax = math.max(MM.TCmax,tonumber(MM.TCt[i])/100)
            end
            MM.TCmin=MM.TCmin>0 and MM.TCmin or 0
            MM.TCw = tonumber(MM.TCt[2] or 0)/100
            requreDraw()
        end
    end
    
    function MainFrame()
        clear()
        if not MM.Connected then return end
        if MM.BVol < 50 then return end
        Alpha = 255
        if MM.KRVol < 600 then Alpha = 60 end
        local StateCol = {
            Color(188,52,34,Alpha),
            Color(243,158,238,Alpha),
            Color(213,186,67,Alpha),
            Color(34,99,49,Alpha),
        }
        drawText(40,35,"РЕЖИМ:",0,1,Color(231,210,140,Alpha),Arial[26])
        drawText(173,35,MM.Hod and Rezhim[1] or MM.TCw>0.2 and Rezhim[3] or MM.Tormoz and Rezhim[3] or Rezhim[2],1,1,Color(255,0,50,Alpha),Arial[26])
        drawText(140,75," № вагона:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
        drawText(133+12*i,75,tostring(i),0,1    ,Color(231,210,140,Alpha),Arial[23])
        end
        
        drawText(140,105,"Двери:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,98,11,18,StateCol[MM.Doors[i]=="1"  and 4 or 2])
        end
        
        drawText(140,124,"БВ:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,117,11,18,StateCol[MM.BV[i]=="1"  and 4 or 1])
        end
        
        drawText(140,143,"Сбор Сх:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,136,11,18,StateCol[MM.Sbor[i]=="1"  and 4 or 2])
        end
        
        drawText(140,162,"ПТ вкл:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,155,11,18,StateCol[tonumber(MM.TCt[i])/100>0.2 and 4 or 2])
        end
        
        drawText(140,181,"СТ торм:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,174,11,18,StateCol[MM.VZ1[i]=="1" and 4 or 2])
        end
        
        drawText(140,200,"Экс торм:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,193,11,18,StateCol[MM.VZ2[i]=="1" and 4 or 2])
        end
        
        drawText(140,219,"КР напр:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,212,11,18,StateCol[MM.KR[i]=="1" and 4 or 1])
        end
        
        drawText(140,238,"ПСН:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,231,11,18,StateCol[MM.PSN[i]=="1" and 4 or 1])
        end
        
        drawText(140,257,"СДРК:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,250,11,18,StateCol[MM.RK[i]=="1" and 4 or 3])
        end
        
        drawText(140,276,"Неиспр ТП:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,269,11,18,StateCol[MM.NeisprTP[i]=="0" and 4 or 1])
        end
        
        drawText(140,295,"БТБ гот:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,288,11,18,StateCol[MM.BattVkl[i]=="1" and 4 or 1])
        end
        
        drawText(140,314,"Батт вкл:",2,1,Color(231,210,140,Alpha),Arial[26])
        for i=1,MM.WagNum do
            drawBox(133+12*i,307,11,18,StateCol[MM.BattVkl[i]=="1" and 4 or 2])
        end
        
        drawText(285,35,"БТБ",0,1,Color(231,210,140,Alpha),Arial[26])
        drawBox(345,27,11,18,StateCol[MM.BattVkl[1]=="1" and 4 or 1])
        drawText(425,35,"АРС",2,1,Color(231,210,140,Alpha),Arial[26])
        drawBox(445,27,11,18,StateCol[MM.ARS==0 and 1 or (MM.ARS==1 and 4 or 3)])
        drawBox(475,27,11,18,StateCol[MM.ARS==0 and 1 or (MM.ARS==1 and 4 or 3)])
        drawText(285,75,"V  доп",0,1,Color(231,210,140,Alpha),Arial[26])
        drawText(285,109,"V  факт",0,1,Color(231,210,140,Alpha),Arial[26])
        drawText(285,143,"V  пред",0,1,Color(231,210,140,Alpha),Arial[26])
        drawText(425,75,string.format("%02d",MM.Vcur*10),2,1,Color(255,0,50,Alpha),Arial[26])
        drawText(425,109,string.format("%02d",MM.V),2,1,Color(0,150,50,Alpha),Arial[26])
        drawText(425,143,string.format("%02d",MM.Vnext*10),2,1,Color(90,180,180,Alpha),Arial[26])
        for i=0,2 do 
            drawText(445,75+i*34,"КМ/Ч",0,1,Color(231,210,140,Alpha),Arial[26]) 
        end
        
        drawText(285,177,"РЕЖИМ: "..MM.Rezhim,0,1,Color(231,210,140,Alpha),Arial[26])
        
        tempp = {[0]="Pмн","Pмс","Pтм","Pнм","Uбт"}
        for i=0,4 do
            drawText(15+i*57,340,tempp[i],0,1,Color(231,210,140,Alpha),Arial[26])
        end
        local tempp = {[0]=MM.TCmin,MM.TCmax,MM.TM,MM.NM,MM.BVol}
        for i=0,3 do
            drawText(35+i*58,360,string.format("%.2f", tempp[i]),1,1,Color(255,0,50,Alpha),Arial[26])
        end
        
        drawText(35+4*58,360,string.format("%02d", tempp[4]),1,1,Color(255,0,50,Alpha),Arial[26])
        
        for i=0,4 do
            drawText(15,385+i*20,"ГОВНООШИБКА№"..i,0,1,Color(231,210,140,Alpha),Arial[26])
        end
        
        drawText(5,507,timer.date("%H:%M:%S"),0,2,Color(231,210,140,Alpha),Arial[26])
        drawText(507,507,timer.date("%d.%m.%Y"),2,2,Color(231,210,140,Alpha),Arial[26])
        isDraw=true
    end
    
    hook.add("render","MMVdraw",
        function()
            if isDraw then return end
            MainFrame()
        end
    )
    
     hook.add("net", "Recirve", 
        function(Name)
            if Name == "MMV" then
                getMMNetData(0)
            end
        end
    )
end
